Experimental API method com.intellij.openapi.vfs.VirtualFile.isCaseSensitive() : boolean is invoked in com.wh.tools.VfsUtilCore.isAncestorOrSelf(String, VirtualFile) : boolean. This method can be changed in a future release leading to incompatibilities
Experimental API class com.intellij.model.ModelBranchUtil is referenced in com.wh.tools.VfsUtilCore.getRelativePath(VirtualFile, VirtualFile, char) : String. This class can be changed in a future release leading to incompatibilities
Experimental API method com.intellij.model.ModelBranchUtil.checkSameBranch(com.intellij.openapi.vfs.VirtualFile left, com.intellij.openapi.vfs.VirtualFile right) : void is invoked in com.wh.tools.VfsUtilCore.getRelativePath(VirtualFile, VirtualFile, char) : String. This method can be changed in a future release leading to incompatibilities
Experimental API method com.intellij.model.ModelBranchUtil.checkSameBranch(com.intellij.openapi.vfs.VirtualFile left, com.intellij.openapi.vfs.VirtualFile right) : void is invoked in com.wh.tools.VfsUtilCore.findRelativePath(VirtualFile, VirtualFile, char) : String. This method can be changed in a future release leading to incompatibilities
Experimental API method com.intellij.openapi.vfs.VirtualFile.isCaseSensitive() : boolean is invoked in com.wh.tools.VfsUtilCore.pathEqualsTo(VirtualFile, String) : boolean. This method can be changed in a future release leading to incompatibilities
Experimental API class com.intellij.model.ModelBranchUtil is referenced in com.wh.tools.VfsUtilCore.findRelativePath(VirtualFile, VirtualFile, char) : String. This class can be changed in a future release leading to incompatibilities
